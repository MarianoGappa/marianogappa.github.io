<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mariano Gappa&#39;s Blog</title>
    <description>Blog about Software Engineering and Music Production.</description>
    <link>http://marianogappa.github.io/</link>
    <atom:link href="http://marianogappa.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>jira-cli: a lightweight bash script for easily querying JIRA</title>
        <description>&lt;h2 id=&quot;get-jira-cli-at&quot;&gt;Get jira-cli at&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MarianoGappa/jira-cli&quot;&gt;https://github.com/MarianoGappa/jira-cli&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why?&lt;/h2&gt;

&lt;p&gt;JIRA is cool. But it&amp;rsquo;s slow! And it&amp;rsquo;s not composable. And devs/ops love the terminal.&lt;/p&gt;

&lt;h2 id=&quot;use-cases&quot;&gt;Use cases&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Once I had this requirement to tell some business person about what tickets (JIRA issues) we deployed. We had the ticket numbers on the commit messages, so a &lt;code&gt;git diff ... | grep ... | sort | uniq&lt;/code&gt; between deploy tags was kind of enough to get them&amp;hellip;only the guy wanted the ticket titles as well. With some clever Sublime multi-cursor hacking plus a terminal I would open all the tickets on Chrome and then copy-paste the titles from them one-by-one. So boring and slow!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then there&amp;rsquo;s looking for tickets. It&amp;rsquo;s easy enough on JIRA, with JQL and the UI tools. But it&amp;rsquo;s slow!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then there&amp;rsquo;s keeping a personal backlog on JIRA, which can also be achieved with JQL + bookmarks. That process is just fine as it is just using the UI, until you want to combine it with something (i.e. until you want to &amp;ldquo;pipe it to something&amp;rdquo;). For example, boss comes in: &amp;ldquo;can you do this?&amp;rdquo;. You: &amp;ldquo;I have these 3 tickets already. What&amp;rsquo;s the priority?&amp;rdquo;. What&amp;rsquo;s the fastest easiest way to get those 3 links so that your boss can prioritise? Or is it better to get ticket names and titles rather than links?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Say you have a list of say 5 tickets you&amp;rsquo;re trying to finish by the end of the week. All you care about is those 5 tickets and their status; why should you load all that clunky UI, set up labels beforehand, etc, etc?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;quick-start&quot;&gt;Quick start&lt;/h2&gt;

&lt;p&gt;Please follow the instructions &lt;a href=&quot;https://github.com/MarianoGappa/jira-cli/blob/master/README.md&quot;&gt;in the readme&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note that jira-cli requires the awesome &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; tool, which if you don&amp;rsquo;t have installed, you really should! jira-cli will remind you to install it if it doesn&amp;rsquo;t find it.&lt;/p&gt;

&lt;p&gt;When you first run &lt;code&gt;jira&lt;/code&gt;, it&amp;rsquo;ll open &lt;code&gt;~/.jiraconfig&lt;/code&gt; on your default editor:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://marianogappa.github.io/images/jira-cli-first-run.png&quot; alt=&quot;Running jira-cli for the first time&quot;&gt;&lt;/p&gt;

&lt;p&gt;After you configure your credentials you should be good to go. Try &lt;code&gt;jira ok&lt;/code&gt; one last time to double-check:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jira ok
OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;tweaking-and-examples&quot;&gt;Tweaking and examples&lt;/h2&gt;

&lt;p&gt;Personally, I like to go all the way with the tools I use the most, so I like these aliases:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;git&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;subl .&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;docker&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;kubectl&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;jira&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So if one morning I feel energetic enough to finish up all my backlog, I open all my assigned tickets in Chrome in one go!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;j me | j o
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which translates to:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;jira &amp;ldquo;output all ticket numbers assigned to me&amp;rdquo; | jira &amp;ldquo;open all tickets from STDIN on browser&amp;rdquo;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(To clarify: you don&amp;rsquo;t have to be so hacker: &lt;code&gt;jira me | jira open&lt;/code&gt; works just as well.
For more info just type: &lt;code&gt;jira&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;If the boss asks me to do something (like in the example use case), I can give him my backlog for him to prioritise with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;j me | j t
ABC-123     Do some work
DEF-456     Do some more work
GHI-789     Do very urgent work
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When I can&amp;rsquo;t remember what I was working on, I really like the search command. It shows up to 15 results ordered by last updated using JQL&amp;rsquo;s &lt;code&gt;text&lt;/code&gt; filter, all bound to the projects you configured on &lt;code&gt;~/.jiraconfig&lt;/code&gt;. You can then choose to open one by adding e.g. &lt;code&gt;| j o 3&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;j s cat
JKL-012     Feed the cat
MNO-345     Buy a new cat
PQR-678     Take the cat shopping

~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;j s cat | j o 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;in-closing&quot;&gt;In closing&lt;/h2&gt;

&lt;p&gt;Try it, it&amp;rsquo;s free and open source! It&amp;rsquo;s not the new &lt;code&gt;grep&lt;/code&gt;, but it can be pretty useful once or twice a day. It&amp;rsquo;s been stable enough for me for a few months now. Please contribute with issues, PRs, etc! If you find it useful, let me know!&lt;/p&gt;
</description>
        <pubDate>Tue, 10 May 2016 00:00:00 +1200</pubDate>
        <link>http://marianogappa.github.io/software/2016/05/10/jira-cli/</link>
        <guid isPermaLink="true">http://marianogappa.github.io/software/2016/05/10/jira-cli/</guid>
      </item>
    
      <item>
        <title>Fixing syntax highlighting issues in Sublime Text 3</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;My two main IDEs nowadays are &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;Intellij Idea&lt;/a&gt; and &lt;a href=&quot;http://www.sublimetext.com/3&quot;&gt;Sublime Text&lt;/a&gt;. I basically like to use IDEA for strongly-typed languages and Sublime for weakly-typed languages. However, not long ago I found a bug on Sublime!&lt;/p&gt;

&lt;p&gt;In version 5.4 of PHP, they &lt;a href=&quot;http://php.net/manual/en/migration54.new-features.php&quot;&gt;introduced a new syntax for arrays&lt;/a&gt; that is reminiscent of the JSON notation:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Old PHP Array syntax
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// New PHP Array syntax
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Even though support for this new syntax within the Sublime codebase seems to be limited, oddly enough the colouring seems to be working properly. But I&amp;rsquo;ve found a case where it&amp;rsquo;s not. This case was probably not discovered because PHP people don&amp;rsquo;t like type-hinting!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://marianogappa.github.io/images/sublime-highlighting-before.png&quot; alt=&quot;Highlighting Issue - Before&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;now-here-39-s-how-to-fix-it&quot;&gt;Now, here&amp;rsquo;s how to fix it&lt;/h2&gt;

&lt;h3 id=&quot;context&quot;&gt;Context&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ever wondered how Sublime does the syntax highlighting magic? The answer is: lots and lots of regexes. &lt;a href=&quot;https://github.com/sublimehq/Packages/blob/master/PHP/PHP%20Source.sublime-syntax&quot;&gt;This is the Language file for PHP&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The syntax highlighting feature uses the &lt;a href=&quot;https://en.wikipedia.org/wiki/Oniguruma&quot;&gt;Oniguruma regular expression library&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I recommend &lt;a href=&quot;https://duckduckgo.com/?q=regex%20cheat%20sheet&amp;amp;ia=cheatsheet&amp;amp;iax=1&quot;&gt;this DuckDuckGo regex cheatsheet&lt;/a&gt; if you need a quick reference; it&amp;rsquo;s very good!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also, I recommend using &lt;a href=&quot;http://rubular.com/&quot;&gt;this online regex parser&lt;/a&gt; when you get into the regex hacking part. It&amp;rsquo;s not my favourite one but it&amp;rsquo;s Ruby-based.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Before we begin, you should skim through &lt;a href=&quot;http://www.sublimetext.com/docs/3/syntax.html&quot;&gt;this syntax guide&lt;/a&gt; to familiarise yourself with the code we&amp;rsquo;ll be editing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Optionally, you might want to read &lt;a href=&quot;http://stackoverflow.com/questions/25184605/cloning-a-sublime-text-3-highlighting-syntax-definition&quot;&gt;this StackOverflow question&lt;/a&gt;, as it was very insightful to understand the process.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;opening-the-language-file&quot;&gt;Opening the language file&lt;/h3&gt;

&lt;p&gt;The first thing we need to do is to open the Language package (in this case the PHP one). For this, we need to &lt;a href=&quot;https://packagecontrol.io/packages/PackageResourceViewer&quot;&gt;install the PackageResourceViewer plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Within Sublime&amp;rsquo;s Command Palette, type:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;PackageResouceViewer: Open Resource
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then select the &lt;code&gt;PHP&lt;/code&gt; resource and then finally &lt;code&gt;PHP.tmLanguage&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll find a very scary xml file. This is the annoying part. The guides recommend that you use &lt;a href=&quot;https://packagecontrol.io/packages/AAAPackageDev&quot;&gt;the AAAPackageDev package&lt;/a&gt; to convert this xml to yaml, thus making it an order of magnitude easier to work with it. Unfortunately, it also says that it doesn&amp;rsquo;t convert perfectly, and this defeats the purpose of using it! I did something different.&lt;/p&gt;

&lt;h3 id=&quot;editing-the-language-file&quot;&gt;Editing the language file&lt;/h3&gt;

&lt;p&gt;This is the good news: you can edit this xml freely (please keep a copy of the original!), and the changes become instantly applied on PHP-syntax-enabled files upon save!&lt;/p&gt;

&lt;p&gt;To make sense of the xml monster, just look up &lt;a href=&quot;https://github.com/sublimehq/Packages/blob/master/PHP/PHP%20Source.sublime-syntax&quot;&gt;the yaml file on the Github repository&lt;/a&gt;. Make sure your Sublime and the GH code are for the same version; otherwise you&amp;rsquo;re not actually looking at the same code. Having the latest version of Sublime installed should be enough.
Looking at the yaml file makes it much easier to spot the place where you need to make the regex change.&lt;/p&gt;

&lt;p&gt;After about half an hour of tinkering with regexes, I finally found a modification that worked for all cases I could think of. The problem that held me up was that I was trying to match either 2 groups (&lt;code&gt;array&lt;/code&gt; and &lt;code&gt;(&lt;/code&gt;) or 1 group (&lt;code&gt;[&lt;/code&gt;), so I needed a wrapping group with two cases (i.e. &lt;code&gt;(a|b)&lt;/code&gt;) that wasn&amp;rsquo;t actually capturing anything per se. The solution to this was &lt;code&gt;Passive (non-capturing) groups&lt;/code&gt; (i.e. &lt;code&gt;(?:...)&lt;/code&gt;). I mention this because you might need it; when you see how the classes are picked you&amp;rsquo;ll understand why.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://marianogappa.github.io/images/sublime-highlighting-after.png&quot; alt=&quot;Highlighting Issue - Before&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;fun-fact&quot;&gt;Fun fact&lt;/h2&gt;

&lt;p&gt;Before I came up with the idea of passive capturing groups I naturally thought of lookbehind assertions (i.e. &lt;code&gt;?&amp;lt;=&lt;/code&gt;). When it didn&amp;rsquo;t work I facepalmed: &amp;ldquo;of course! it&amp;rsquo;s xml; I have to escape it (i.e. &lt;code&gt;&amp;amp;lt;&lt;/code&gt;)&amp;rdquo;. When it didn&amp;rsquo;t work again I started googling. It seems the guys gave up on lookbehinds altogether for this reason so they just didn&amp;rsquo;t implement it, even though Oniguruma supports it :) Good idea though; lookbehinds are slow and not universally supported (&lt;a href=&quot;http://stackoverflow.com/questions/24093540/why-doesnt-javascript-have-lookbehinds&quot;&gt;Javascript&lt;/a&gt;, &lt;a href=&quot;http://stackoverflow.com/questions/7605615/regex-negative-lookbehind-in-ruby-doesnt-seem-to-work?rq=1&quot;&gt;Ruby &amp;lt; 1.9&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;lastly&quot;&gt;Lastly&lt;/h2&gt;

&lt;p&gt;Once you are done and you&amp;rsquo;re sure it works properly, share your contribution to the World!
&lt;a href=&quot;https://github.com/sublimehq/Packages/issues/98&quot;&gt;This&lt;/a&gt; was my Github issue for the PHP syntax fix.&lt;/p&gt;

&lt;p&gt;Happy open sourcing!&lt;/p&gt;
</description>
        <pubDate>Sat, 27 Feb 2016 00:00:00 +1300</pubDate>
        <link>http://marianogappa.github.io/software/2016/02/27/fixing-syntax-highlighting-in-sublime3/</link>
        <guid isPermaLink="true">http://marianogappa.github.io/software/2016/02/27/fixing-syntax-highlighting-in-sublime3/</guid>
      </item>
    
  </channel>
</rss>
